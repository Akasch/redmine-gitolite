= redmine-gitolite

== About
https://github.com/kahseng/redmine_gitolite_hook
https://github.com/jhogendorn/redmine-gitolite

This is Redmine Gitolite Hook combined with redmine-gitolite

A Redmine plugin which manages your gitolite configuration based on your projects and memberships in Redmine.

Provides gitolite hook, for automaticaly pulling changes to 

Includes Public Key management views (extracted from http://plan.io).



== Requirements:

=== Gems:
* lockfile
* gitolite

=== Other:
* gitolite server
* accessible git executable


== Setup:

1. Install redmine and put this plugin in vendor/plugins directory and migrate
database (plugins)
  * cd redmine/vendor/plugins
  * git clone ...
  * rake db:migrate_plugins

2. User running redmine (his key must be named named "redmine") must have RW+ access gitolite-configuration (assuming that you have gitolite installed).

3. Make sure that redmine user has gitolite server in his known_host list
  * sudo su - redmine
  * ssh gitolite.server
  * [accept key]

4. Add update hook to common gitolite hooks (one of examples) and configure it
(host, api key, etc)
  * sudo su - gitolite
  * cat > .gitolite/hooks/common/update
  * [paste hook]
  * vim .gitolite/hooks/common/update
  * [configure, in complex hook you can do this by settin git config options]
  * chmod +x .gitolite/hooks/common/update

5. Configure plugin in redmine settings
  * plugin settings
  * set host and repository dir
  * don't forget to create repository dir

== Pro Tips:

* You should manage your keys only from Redmine to avoid conflicts.
* Need new bare git repo? Create it via Redmine, disable other features.
* This is most convinient way to manage keys by your user.
